package com.db.itrac.rules.trade.pending

import com.db.itrac.domain.trade.TpmlTrade
import com.db.itrac.domain.RiskState
import com.db.itrac.domain.ItracStatus
import com.db.itrac.domain.UserAction
import com.db.itrac.rules.TradeUpdated

dialect "mvel"

declare TradeUpdated
   @role(event)
   @timestamp(eventTime)
end


rule "Trade needs 4 eyes check"
ruleflow-group "pending"
	when
      $trade : TpmlTrade( riskState == RiskState.STP ) from entry-point "my-t1"
      not ( TradeUpdated(itracId == $trade.itracId) )
	then  
	  modify($trade) { itracStatus = ItracStatus.PENDING_4EYES_CHECK }
	  insert(new TradeUpdated($trade))
end

rule "Trade Send to Back Office"
ruleflow-group "pending"
	when
      $trade : TpmlTrade( riskState == RiskState.STP,wfUserAction == UserAction.APPROVE ) from entry-point "my-t1"
      not ( TradeUpdated(itracId == $trade.itracId) )
	then	
	  modify($trade) { itracStatus = ItracStatus.SENT_TO_BOOKING_SYSTEM }
	  insert(new TradeUpdated($trade))	   
end

rule "Update Trade Version"
ruleflow-group "pending"
no-loop true
	when
      $trade : TpmlTrade(  itracStatus != '' )  from entry-point "my-t1" 
      exists ( TradeUpdated ( itracId == $trade.itracId ) )   
	then	 
	  modify ($trade) { subVersion += 1 }	  
end
